{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Denislove\\\\Desktop\\\\project-x\\\\client\\\\src\\\\components\\\\Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nexport default function Tasks({\n  task\n}) {\n  _s();\n\n  const [reactive, setReactive] = useState('btn-light');\n\n  const doActive = async () => {\n    //console.log(reactive)\n    setReactive('btn-primary'); // console.log(reactive)\n  };\n\n  const notActive = async () => {\n    //console.log('')\n    setReactive('btn-light');\n  };\n\n  const privet = async () => {\n    return Promise.resolve(1);\n  };\n\n  const eventlist = id1 => {\n    let enable = 0;\n    window.setTimeout(function () {\n      let el2 = document.getElementById(id1);\n\n      if (el2) {\n        el2.addEventListener('mouseout', () => {\n          el2.classList.add(\"btn-light\");\n          el2.classList.remove(\"btn-primary\"); //   el2.classList.remove(\"btn-primary\")\n          // setReactive('btn-primary')\n          // console.log('привет')\n        });\n        el2.addEventListener('mouseover', () => {\n          el2.classList.add(\"btn-primary\");\n          el2.classList.remove(\"btn-light\"); // el2.classList.add(\"btn-primary\")\n        });\n        el2.addEventListener('click', () => {\n          var obj = {};\n          var cookies = document.cookie.split(/;/);\n\n          for (var i = 0, len = cookies.length; i < len; i++) {\n            var cookie = cookies[i].split(/=/);\n            obj[cookie[0]] = cookie[1];\n          }\n\n          let el_temp;\n\n          if (!id1[3]) {\n            el_temp = document.getElementsByClassName(`${id1[2]}id`);\n          } else {\n            console.log('тут работаем');\n            el_temp = document.getElementsByClassName(`${id1[2]}${id1[3]}id`);\n          }\n\n          for (var i = 0; i < el_temp.length; i++) {\n            console.log(el_temp[i].style.backgroundColor = \"\");\n          }\n\n          el2.style.backgroundColor = \"#28a745\";\n          console.log(id1);\n\n          if (!id1[3]) {\n            document.cookie = `${id1[2]}=${id1[0]};`;\n          } else {\n            console.log('тут работаем');\n            document.cookie = `${id1[2]}${id1[3]}=${id1[0]};`;\n          }\n        });\n      }\n    }, 500);\n  }; // console.log('привет')\n\n\n  let tasking = task.question.split(';');\n\n  if (tasking[tasking.length - 1] == '') {\n    tasking.pop();\n  }\n\n  let count = 0; //document.getElementsByClassName(button')\n  // if (task.type == 1 || task.type == 2){\n  // return (\n  //   <div>\n  //     <div className='question_text'>\n  //       ТИП 1\n  //       Задание, {task.id} \n  //     </div>\n  //     <div className='text_task'>\n  //       {task.info}\n  //     </div>\n  //     <div>\n  //       {tasking.map(data =>\n  //       <div className={`text_tasks ${count = count + 1} ${task.TaskId}id`}>\n  //           {data}\n  //           {/* {document.getElementsByClassName('text_task')} */}\n  //       </div>\n  //       )}\n  //     </div>\n  //   </div>\n  //   // <div className=\"programms\" style={{background: '#C7EEFF'}}>\n  //   //   {themes.name}\n  //   //   {themes.id}\n  //   // </div>\n  // )}\n\n  if (task.type == 1 || task.type == 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_text\",\n        children: [\"\\u0422\\u0418\\u041F 2 \\u0417\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435, \", task.TaskId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_task\",\n        children: task.info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tasking.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${count}_${task.TaskId}`,\n          className: `text_tasks ${count = count + 1} ${task.TaskId}id ${reactive}`,\n          children: [data, console.log(task.TaskId), eventlist(`${count - 1}_${task.TaskId}`)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Tasks, \"Ouz4Xgd9bJT4zHzcQ6K9vMdt4p4=\");\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/Denislove/Desktop/project-x/client/src/components/Tasks.js"],"names":["React","useState","Tasks","task","reactive","setReactive","doActive","notActive","privet","Promise","resolve","eventlist","id1","enable","window","setTimeout","el2","document","getElementById","addEventListener","classList","add","remove","obj","cookies","cookie","split","i","len","length","el_temp","getElementsByClassName","console","log","style","backgroundColor","tasking","question","pop","count","type","TaskId","info","map","data"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function Tasks({task}) {\r\n  const [reactive, setReactive] = useState('btn-light')\r\n  const doActive = async() =>{\r\n    //console.log(reactive)\r\n    setReactive('btn-primary')\r\n   // console.log(reactive)\r\n}\r\nconst notActive = async() =>{ \r\n    //console.log('')\r\n    setReactive('btn-light')\r\n}\r\nconst privet = async() =>{\r\n  return Promise.resolve(1);\r\n}\r\nconst eventlist = (id1) =>{\r\n  let enable = 0\r\n  window.setTimeout(function() {\r\n  let el2 = document.getElementById(id1)\r\n  if(el2){\r\n    el2.addEventListener('mouseout', () =>{\r\n      el2.classList.add(\"btn-light\")\r\n      el2.classList.remove(\"btn-primary\")\r\n   //   el2.classList.remove(\"btn-primary\")\r\n      // setReactive('btn-primary')\r\n      // console.log('привет')\r\n    });\r\n    el2.addEventListener('mouseover', () =>{\r\n      el2.classList.add(\"btn-primary\")\r\n      el2.classList.remove(\"btn-light\")\r\n     // el2.classList.add(\"btn-primary\")\r\n    });\r\n    el2.addEventListener('click', () =>{\r\n      var obj = {};\r\n      var cookies = document.cookie.split(/;/);\r\n      for (var i = 0, len = cookies.length; i < len; i++) {\r\n        var cookie = cookies[i].split(/=/);\r\n        obj[cookie[0]] = cookie[1];\r\n      }\r\n      let el_temp\r\n        if (!id1[3]){\r\n          el_temp = document.getElementsByClassName(`${id1[2]}id`)}\r\n        else{\r\n          console.log('тут работаем')\r\n          el_temp = document.getElementsByClassName(`${id1[2]}${id1[3]}id`)\r\n        }\r\n        for (var i =0; i<el_temp.length; i++) {console.log(el_temp[i].style.backgroundColor = \"\")}\r\n      el2.style.backgroundColor = \"#28a745\"\r\n      console.log(id1)\r\n      if (!id1[3]){document.cookie = `${id1[2]}=${id1[0]};`}\r\n      else{\r\n        console.log('тут работаем')\r\n        document.cookie = `${id1[2]}${id1[3]}=${id1[0]};`\r\n      }\r\n\r\n    });\r\n  }\r\n}, 500);}\r\n  \r\n  // console.log('привет')\r\n\r\n  let tasking = task.question.split(';')\r\n  if (tasking[tasking.length - 1] == ''){\r\n    tasking.pop()\r\n  }\r\n  let count = 0\r\n\r\n  //document.getElementsByClassName(button')\r\n  // if (task.type == 1 || task.type == 2){\r\n  // return (\r\n  //   <div>\r\n  //     <div className='question_text'>\r\n  //       ТИП 1\r\n  //       Задание, {task.id} \r\n  //     </div>\r\n  //     <div className='text_task'>\r\n  //       {task.info}\r\n  //     </div>\r\n  //     <div>\r\n  //       {tasking.map(data =>\r\n  //       <div className={`text_tasks ${count = count + 1} ${task.TaskId}id`}>\r\n            \r\n  //           {data}\r\n  //           {/* {document.getElementsByClassName('text_task')} */}\r\n  //       </div>\r\n  //       )}\r\n  //     </div>\r\n      \r\n  //   </div>\r\n  //   // <div className=\"programms\" style={{background: '#C7EEFF'}}>\r\n  //   //   {themes.name}\r\n  //   //   {themes.id}\r\n  //   // </div>\r\n  // )}\r\n  if (task.type == 1 || task.type == 2){\r\n    return (\r\n      <div>\r\n      <div className='question_text'>\r\n        ТИП 2\r\n        Задание, {task.TaskId} \r\n      </div>\r\n      <div className='text_task'>\r\n        {task.info}\r\n      </div>\r\n      <div>\r\n      {tasking.map(data =>\r\n        <div id={`${count}_${task.TaskId}`} className={`text_tasks ${count = count + 1} ${task.TaskId}id ${reactive}`}>\r\n            {data}\r\n            {console.log(task.TaskId)}\r\n            {eventlist(`${count - 1}_${task.TaskId}`)}\r\n            \r\n        </div>\r\n        )}\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}