{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Denislove\\\\Desktop\\\\project-x\\\\client\\\\src\\\\components\\\\modals\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../index\";\nimport { createDevice, fetchBrands, fetchDevices, fetchTypes } from \"../../http/CatalogApi\";\nimport { observer } from \"mobx-react-lite\";\nconst CreateTask = observer(_c = _s(({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const {\n    tasks\n  } = useContext(Context);\n  const [name, setName] = useState('');\n  const [quality, setQuality] = useState(0); // const [price, setPrice] = useState(0)\n\n  const [file, setFile] = useState(null);\n  const [info, setInfo] = useState([]);\n  const [type, setType] = useState('');\n  const [taskings, setTaskings] = useState([]);\n  let massive = [1, 2, 3, 4];\n  let tasking = [];\n  let types = [1, 2];\n  const [resultin, setRes] = useState('not');\n  let result; // const [result, setResult] = useState('')\n\n  const setTasking = (id, task) => {// tasking[id] = task\n    // console.log(tasking.length)\n    // console.log(tasking[1])\n  };\n\n  const setResult = id => {\n    result = id;\n    setRes(result);\n    console.log(result);\n  };\n\n  const GetQuestions = quest => {\n    let content = [];\n\n    for (let i = 0; i < quest; i++) {\n      content.push( /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: taskings[i],\n        onChange: e => setTasking(i, e.target.value + ';'),\n        className: \"mt-3\",\n        placeholder: `Вопрос ${i + 1}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }, this));\n    }\n\n    return content;\n  };\n\n  const GetResults = data => {\n    let resulting = [];\n\n    for (let i = 0; i < data; i++) {\n      resulting.push( /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => setResult(i),\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 28\n      }, this));\n    }\n\n    return resulting;\n  };\n\n  const addTask = () => {\n    console.log(name);\n    console.log(taskings);\n    console.log(type);\n    console.log(resultin);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          className: \"mt-3\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0443 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mt-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            children: quality || 'Выберите количество вопросов'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: massive.map(data => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setQuality(data),\n              children: data\n            }, data, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), quality ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: GetQuestions(quality)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mt-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            children: type || 'Выберите тип'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: types.map(data => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setType(data),\n              children: data\n            }, data, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mt-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            children: resultin != 'not' ? resultin + 1 : 'Значение'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: quality ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: GetResults(quality)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          type: \"file\",\n          onChange: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onHide,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: addTask,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}, \"WEYSEg+zdtYjqQpU3fzPM3hMulw=\"));\n_c2 = CreateTask;\nexport default CreateTask;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateTask$observer\");\n$RefreshReg$(_c2, \"CreateTask\");","map":{"version":3,"sources":["C:/Users/Denislove/Desktop/project-x/client/src/components/modals/CreateTask.js"],"names":["React","useContext","useEffect","useState","Modal","Button","Dropdown","Form","Row","Col","Context","createDevice","fetchBrands","fetchDevices","fetchTypes","observer","CreateTask","show","onHide","tasks","name","setName","quality","setQuality","file","setFile","info","setInfo","type","setType","taskings","setTaskings","massive","tasking","types","resultin","setRes","result","setTasking","id","task","setResult","console","log","GetQuestions","quest","content","i","push","e","target","value","GetResults","data","resulting","addTask","map"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/CatalogApi\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateTask = observer(({show, onHide}) => {\n    const {tasks} = useContext(Context)\n    const [name, setName] = useState('')\n    const [quality, setQuality] = useState(0)\n    // const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n    const [type, setType] = useState('')\n    const [taskings, setTaskings] = useState([])\n    let massive = [1,2,3,4]\n    let tasking = []\n    let types = [1,2]\n    const [resultin, setRes] = useState('not')\n    let result\n    // const [result, setResult] = useState('')\n    const setTasking = (id, task) =>{\n        // tasking[id] = task\n        // console.log(tasking.length)\n        // console.log(tasking[1])\n    }\n\n    const setResult = (id) =>{\n\n        result = id\n        setRes(result)\n        console.log(result)\n    }\n\n    const GetQuestions = quest => {\n        let content = [];\n        for (let i = 0; i < quest; i++) {\n            content.push(<Form.Control\n                key={i}\n                value={taskings[i]}\n                onChange={e => setTasking(i, e.target.value + ';')}\n                className=\"mt-3\"\n                placeholder={`Вопрос ${i + 1}`}\n            />);\n        }\n        return content;\n        };\n\n    const GetResults = data => {\n        let resulting = [];\n        for (let i = 0; i < data; i++) {\n            resulting.push(<Dropdown.Item\n                onClick={() => setResult(i)}\n                key={i}\n            >\n                {i+1}\n            </Dropdown.Item>);\n        }\n        return resulting;\n        };\n    \n    const addTask = () => {\n        console.log(name)\n        console.log(taskings)\n        console.log(type)\n        console.log(resultin)\n        \n    }\n        \n\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить задание\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            className=\"mt-3\"\n                            placeholder=\"Введите формулировку задания\"\n                        />\n\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{quality || 'Выберите количество вопросов'}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {massive.map(data =>\n                                <Dropdown.Item\n                                    onClick={() => setQuality(data)}\n                                    key={data}\n                                >\n                                    {data}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>    \n                    </Dropdown>\n                    {quality ? <div>{GetQuestions(quality)}</div> : <div></div>}\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{type || 'Выберите тип'}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {types.map(data =>\n                                <Dropdown.Item\n                                    onClick={() => setType(data)}\n                                    key={data}\n                                >\n                                    {data}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <div>Выберите правильный ответ</div>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{resultin != 'not' ? resultin + 1 : 'Значение'}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                        {quality ? <div>{GetResults(quality)}</div> : <div></div>}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <hr/>\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={setName}\n                    />\n                    <hr/>\n                    {/* {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )} */}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addTask}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateTask;\n"]},"metadata":{},"sourceType":"module"}