{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Denislove\\\\Desktop\\\\project-x\\\\client\\\\src\\\\components\\\\Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nexport default function Tasks({\n  task\n}) {\n  _s();\n\n  const [reactive, setReactive] = useState('btn-light');\n\n  const doActive = async () => {\n    console.log(reactive);\n    setReactive('btn-primary');\n    console.log(reactive);\n  };\n\n  const notActive = async () => {\n    console.log('');\n    setReactive('btn-light');\n  };\n\n  const privet = async id => {\n    console.log('привет', id);\n  };\n\n  let tasking = task.question.split(';');\n\n  if (tasking[tasking.length - 1] == '') {\n    tasking.pop();\n  }\n\n  let count = 0; //document.getElementsByClassName(button')\n\n  if (task.type == 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_text\",\n        children: [\"\\u0422\\u0418\\u041F 1 \\u0417\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435, \", task.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_task\",\n        children: task.info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tasking.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text_tasks ${count = count + 1} ${task.TaskId}id`,\n          onClick: privet,\n          children: [data, task.ThemeId, document.getElementsByClassName('text_task')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this) // <div className=\"programms\" style={{background: '#C7EEFF'}}>\n    //   {themes.name}\n    //   {themes.id}\n    // </div>\n    ;\n  }\n\n  if (task.type == 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_text\",\n        children: [\"\\u0422\\u0418\\u041F 2 \\u0417\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435, \", task.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_task\",\n        children: task.info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tasking.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text_tasks ${count = count + 1} ${task.TaskId}id`,\n          children: [data, task.ThemeId, console.log(task.TaskId), document.getElementsByClassName(`text_tasks ${count} ${task.TaskId}id`).addEventListener('Click', () => privet)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this) // <div className=\"programms\" style={{background: '#C7EEFF'}}>\n    //   {themes.name}\n    //   {themes.id}\n    // </div>\n    ;\n  }\n}\n\n_s(Tasks, \"Ouz4Xgd9bJT4zHzcQ6K9vMdt4p4=\");\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/Denislove/Desktop/project-x/client/src/components/Tasks.js"],"names":["React","useState","Tasks","task","reactive","setReactive","doActive","console","log","notActive","privet","id","tasking","question","split","length","pop","count","type","info","map","data","TaskId","ThemeId","document","getElementsByClassName","addEventListener"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAuB;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,WAAD,CAAxC;;AACA,QAAMK,QAAQ,GAAG,YAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAC,IAAAA,WAAW,CAAC,aAAD,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,GAJC;;AAKF,QAAMK,SAAS,GAAG,YAAU;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAH,IAAAA,WAAW,CAAC,WAAD,CAAX;AACH,GAHD;;AAIA,QAAMK,MAAM,GAAG,MAAMC,EAAN,IAAY;AACzBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,EAAtB;AACD,GAFD;;AAGE,MAAIC,OAAO,GAAGT,IAAI,CAACU,QAAL,CAAcC,KAAd,CAAoB,GAApB,CAAd;;AACA,MAAIF,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAP,IAA+B,EAAnC,EAAsC;AACpCH,IAAAA,OAAO,CAACI,GAAR;AACD;;AACD,MAAIC,KAAK,GAAG,CAAZ,CAlBoC,CAoBpC;;AACA,MAAId,IAAI,CAACe,IAAL,IAAa,CAAjB,EAAmB;AACnB,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,wFAEYf,IAAI,CAACQ,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACGR,IAAI,CAACgB;AADR;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAA,kBACGP,OAAO,CAACQ,GAAR,CAAYC,IAAI,iBACjB;AAAK,UAAA,SAAS,EAAG,cAAaJ,KAAK,GAAGA,KAAK,GAAG,CAAE,IAAGd,IAAI,CAACmB,MAAO,IAA/D;AAAoE,UAAA,OAAO,EAAEZ,MAA7E;AAAA,qBAEKW,IAFL,EAGKlB,IAAI,CAACoB,OAHV,EAIKC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAqBE;AACA;AACA;AACA;AAxBF;AAyBE;;AACF,MAAItB,IAAI,CAACe,IAAL,IAAa,CAAjB,EAAmB;AACjB,wBACE;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,wFAEYf,IAAI,CAACQ,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACGR,IAAI,CAACgB;AADR;AAAA;AAAA;AAAA;AAAA,cALA,eAQA;AAAA,kBACCP,OAAO,CAACQ,GAAR,CAAYC,IAAI,iBACf;AAAK,UAAA,SAAS,EAAG,cAAaJ,KAAK,GAAGA,KAAK,GAAG,CAAE,IAAGd,IAAI,CAACmB,MAAO,IAA/D;AAAA,qBACKD,IADL,EAEKlB,IAAI,CAACoB,OAFV,EAGKhB,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACmB,MAAjB,CAHL,EAIKE,QAAQ,CAACC,sBAAT,CAAiC,cAAaR,KAAM,IAAGd,IAAI,CAACmB,MAAO,IAAnE,EAAwEI,gBAAxE,CAAyF,OAAzF,EAAkG,MAAMhB,MAAxG,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADD;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAoBE;AACA;AACA;AACA;AAvBF;AAyBD;AACF;;GA3EuBR,K;;KAAAA,K","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function Tasks({task}) {\r\n  const [reactive, setReactive] = useState('btn-light')\r\n  const doActive = async() =>{\r\n    console.log(reactive)\r\n    setReactive('btn-primary')\r\n    console.log(reactive)\r\n}\r\nconst notActive = async() =>{ \r\n    console.log('')\r\n    setReactive('btn-light')\r\n}\r\nconst privet = async(id) =>{\r\n  console.log('привет', id)\r\n}\r\n  let tasking = task.question.split(';')\r\n  if (tasking[tasking.length - 1] == ''){\r\n    tasking.pop()\r\n  }\r\n  let count = 0\r\n\r\n  //document.getElementsByClassName(button')\r\n  if (task.type == 1){\r\n  return (\r\n    <div>\r\n      <div className='question_text'>\r\n        ТИП 1\r\n        Задание, {task.id} \r\n      </div>\r\n      <div className='text_task'>\r\n        {task.info}\r\n      </div>\r\n      <div>\r\n        {tasking.map(data =>\r\n        <div className={`text_tasks ${count = count + 1} ${task.TaskId}id`} onClick={privet}>\r\n            \r\n            {data}\r\n            {task.ThemeId}\r\n            {document.getElementsByClassName('text_task')}\r\n        </div>\r\n        )}\r\n      </div>\r\n      \r\n    </div>\r\n    // <div className=\"programms\" style={{background: '#C7EEFF'}}>\r\n    //   {themes.name}\r\n    //   {themes.id}\r\n    // </div>\r\n  )}\r\n  if (task.type == 2){\r\n    return (\r\n      <div>\r\n      <div className='question_text'>\r\n        ТИП 2\r\n        Задание, {task.id} \r\n      </div>\r\n      <div className='text_task'>\r\n        {task.info}\r\n      </div>\r\n      <div>\r\n      {tasking.map(data =>\r\n        <div className={`text_tasks ${count = count + 1} ${task.TaskId}id`}>\r\n            {data}\r\n            {task.ThemeId}\r\n            {console.log(task.TaskId)}\r\n            {document.getElementsByClassName(`text_tasks ${count} ${task.TaskId}id`).addEventListener('Click', () => privet)}\r\n        </div>\r\n        )}\r\n      </div>\r\n      </div>\r\n      // <div className=\"programms\" style={{background: '#C7EEFF'}}>\r\n      //   {themes.name}\r\n      //   {themes.id}\r\n      // </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}