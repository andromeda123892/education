{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Denislove\\\\Desktop\\\\project-x\\\\client\\\\src\\\\components\\\\modals\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../index\";\nimport { createDevice, fetchBrands, fetchDevices, fetchTypes } from \"../../http/CatalogApi\";\nimport { observer } from \"mobx-react-lite\";\nconst CreateTask = observer(_c = _s(({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const {\n    tasks\n  } = useContext(Context);\n  const [name, setName] = useState('');\n  const [quality, setQuality] = useState(0); // const [price, setPrice] = useState(0)\n\n  const [file, setFile] = useState(null);\n  const [info, setInfo] = useState([]);\n  let massive = [1, 2, 3, 4];\n\n  const getQuestions = quest => {\n    let content = [];\n\n    for (let i = 0; i < quality; i++) {\n      const item = quests[i];\n      content.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.quests\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }, this));\n    }\n\n    return content;\n  }; // useEffect(() => {\n  //     fetchTypes().then(data => tasks.setTypes(data))\n  //     fetchBrands().then(data => tasks.setBrands(data))\n  // }, [])\n  // const addInfo = () => {\n  //     setInfo([...info, {title: '', description: '', number: Date.now()}])\n  // }\n  // const removeInfo = (number) => {\n  //     setInfo(info.filter(i => i.number !== number))\n  // }\n  // const changeInfo = (key, value, number) => {\n  //     setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n  // }\n  // const selectFile = e => {\n  //     setFile(e.target.files[0])\n  // }\n  // const addDevice = () => {\n  //     const formData = new FormData()\n  //     formData.append('name', name)\n  //     formData.append('price', `${price}`)\n  //     formData.append('img', file)\n  //     formData.append('brandId', tasks.selectedBrand.id)\n  //     formData.append('typeId', tasks.selectedType.id)\n  //     formData.append('info', JSON.stringify(info))\n  //     createDevice(formData).then(data => onHide())\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          className: \"mt-3\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0443 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mt-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            children: quality || 'Кол-вопросов'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: massive.map(data => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setQuality(data),\n              children: data\n            }, data, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mt-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            children: \"\\\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          // value={price}\n          // onChange={e => setPrice(Number(e.target.value))}\n          className: \"mt-3\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          type: \"file\",\n          onChange: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-dark\",\n          onClick: setName,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onHide,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: setName,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}, \"EH0YfdldRuYxmGg9o9kRU4EXpnE=\"));\n_c2 = CreateTask;\nexport default CreateTask;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateTask$observer\");\n$RefreshReg$(_c2, \"CreateTask\");","map":{"version":3,"sources":["C:/Users/Denislove/Desktop/project-x/client/src/components/modals/CreateTask.js"],"names":["React","useContext","useEffect","useState","Modal","Button","Dropdown","Form","Row","Col","Context","createDevice","fetchBrands","fetchDevices","fetchTypes","observer","CreateTask","show","onHide","tasks","name","setName","quality","setQuality","file","setFile","info","setInfo","massive","getQuestions","quest","content","i","item","quests","push","id","e","target","value","map","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,GAArC,QAA+C,iBAA/C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,EAAmCC,YAAnC,EAAiDC,UAAjD,QAAkE,uBAAlE;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AAEA,MAAMC,UAAU,GAAGD,QAAQ,SAAC,CAAC;AAACE,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAoB;AAAA;;AAC5C,QAAM;AAACC,IAAAA;AAAD,MAAUlB,UAAU,CAACS,OAAD,CAA1B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,CAAD,CAAtC,CAH4C,CAI5C;;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIyB,OAAO,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAd;;AACA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,OAApB,EAA6BU,CAAC,EAA9B,EAAkC;AAC9B,YAAMC,IAAI,GAAGC,MAAM,CAACF,CAAD,CAAnB;AACAD,MAAAA,OAAO,CAACI,IAAR,eAAa;AAAA,kBAAmBF,IAAI,CAACC;AAAxB,SAASD,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cAAb;AACH;;AACD,WAAOL,OAAP;AACC,GAPL,CAR4C,CAsB5C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI,QAAC,KAAD;AACI,IAAA,IAAI,EAAEd,IADV;AAEI,IAAA,MAAM,EAAEC,MAFZ;AAGI,IAAA,QAAQ,MAHZ;AAAA,4BAKI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAUI,QAAC,KAAD,CAAO,IAAP;AAAA,6BACI,QAAC,IAAD;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AACQ,UAAA,KAAK,EAAEE,IADf;AAEQ,UAAA,QAAQ,EAAEiB,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGQ,UAAA,SAAS,EAAC,MAHlB;AAIQ,UAAA,WAAW,EAAC;AAJpB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,WAApB;AAAA,kCACI,QAAC,QAAD,CAAU,MAAV;AAAA,sBAAkBjB,OAAO,IAAI;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD,CAAU,IAAV;AAAA,sBACKM,OAAO,CAACY,GAAR,CAAYC,IAAI,iBACb,QAAC,QAAD,CAAU,IAAV;AACI,cAAA,OAAO,EAAE,MAAMlB,UAAU,CAACkB,IAAD,CAD7B;AAAA,wBAIKA;AAJL,eAESA,IAFT;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAqBI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,WAApB;AAAA,kCACI,QAAC,QAAD,CAAU,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAmCI,QAAC,IAAD,CAAM,OAAN;AACI;AACA;AACA,UAAA,SAAS,EAAC,MAHd;AAII,UAAA,WAAW,EAAC,gKAJhB;AAKI,UAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,gBAnCJ,eA0CI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,SAAS,EAAC,MADd;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,QAAQ,EAAEpB;AAHd;AAAA;AAAA;AAAA;AAAA,gBA1CJ,eA+CI;AAAA;AAAA;AAAA;AAAA,gBA/CJ,eAgDI,QAAC,MAAD;AACI,UAAA,OAAO,EAAE,cADb;AAEI,UAAA,OAAO,EAAEA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eA6FI,QAAC,KAAD,CAAO,MAAP;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,gBAAhB;AAAiC,QAAA,OAAO,EAAEH,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,iBAAhB;AAAkC,QAAA,OAAO,EAAEG,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA7FJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoGH,CAxJ0B,kCAA3B;MAAML,U;AA0JN,eAAeA,UAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/CatalogApi\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateTask = observer(({show, onHide}) => {\n    const {tasks} = useContext(Context)\n    const [name, setName] = useState('')\n    const [quality, setQuality] = useState(0)\n    // const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n    let massive = [1,2,3,4]\n    const getQuestions = quest => {\n        let content = [];\n        for (let i = 0; i < quality; i++) {\n            const item = quests[i];\n            content.push(<li key={item.id}>{item.quests}</li>);\n        }\n        return content;\n        };\n        \n\n\n\n\n    \n    // useEffect(() => {\n    //     fetchTypes().then(data => tasks.setTypes(data))\n    //     fetchBrands().then(data => tasks.setBrands(data))\n    // }, [])\n\n    // const addInfo = () => {\n    //     setInfo([...info, {title: '', description: '', number: Date.now()}])\n    // }\n    // const removeInfo = (number) => {\n    //     setInfo(info.filter(i => i.number !== number))\n    // }\n    // const changeInfo = (key, value, number) => {\n    //     setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    // }\n\n    // const selectFile = e => {\n    //     setFile(e.target.files[0])\n    // }\n\n    // const addDevice = () => {\n    //     const formData = new FormData()\n    //     formData.append('name', name)\n    //     formData.append('price', `${price}`)\n    //     formData.append('img', file)\n    //     formData.append('brandId', tasks.selectedBrand.id)\n    //     formData.append('typeId', tasks.selectedType.id)\n    //     formData.append('info', JSON.stringify(info))\n    //     createDevice(formData).then(data => onHide())\n    // }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить задание\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            className=\"mt-3\"\n                            placeholder=\"Введите формулировку задания\"\n                        />\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{quality || 'Кол-вопросов'}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {massive.map(data =>\n                                <Dropdown.Item\n                                    onClick={() => setQuality(data)}\n                                    key={data}\n                                >\n                                    {data}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>    \n                    </Dropdown>\n                  \n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>\"Выберите тип\"</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {/* {tasks.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => tasks.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )} */}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Form.Control\n                        // value={price}\n                        // onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={setName}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={setName}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {/* {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )} */}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={setName}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateTask;\n"]},"metadata":{},"sourceType":"module"}