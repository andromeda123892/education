{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Denislove\\\\Desktop\\\\project-x\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport { Context } from \"./index\";\nimport { observer } from 'mobx-react-lite';\nconst App = observer(_c = () => {\n  // const {user} = useContext(Context)\n  // useEffect(() => {\n  //     check().then(data => {\n  //         user.setUser(true)\n  //         user.setIsAuth(true)\n  //     }).finally(() => setLoading(false))\n  // }, [])\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}, []);\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Denislove/Desktop/project-x/client/src/App.js"],"names":["React","BrowserRouter","AppRouter","Context","observer","App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,MAAMC,GAAG,GAAGD,QAAQ,MAAC,MAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACI,QAAC,aAAD;AAAA,2BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAbmB,EAajB,EAbiB,CAApB;MAAMC,G;AAcN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport {Context} from \"./index\";\nimport { observer } from 'mobx-react-lite';\nconst App = observer(() =>{\n    // const {user} = useContext(Context)\n    // useEffect(() => {\n    //     check().then(data => {\n    //         user.setUser(true)\n    //         user.setIsAuth(true)\n    //     }).finally(() => setLoading(false))\n    // }, [])\n    return(\n        <BrowserRouter>\n            <AppRouter />\n        </BrowserRouter>\n    );\n}, []);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}