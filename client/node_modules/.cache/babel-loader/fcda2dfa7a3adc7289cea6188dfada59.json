{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Denislove\\\\Desktop\\\\project-x\\\\client\\\\src\\\\components\\\\modals\\\\CreateCompilation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { createCompilation } from \"../../http/CatalogApi\";\nimport { Context } from \"../../index\";\nimport { fetchDevices } from \"../../http/CatalogApi\";\nimport { fetchOneDevice } from \"../../http/CatalogApi\";\n\nconst CreateComp = ({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const {\n    tasks\n  } = useContext(Context);\n  useEffect(() => {\n    fetchDevices().then(data => {\n      console.log(data.rows);\n      tasks.setThemes(data.rows);\n    });\n    fetchOneDevice(id).then(data => {\n      tasks.SetTasks(data); // console.log(tasks.tasks[1].TaskId)\n\n      tasks.tasks.map(data => console.log(data.id));\n    });\n  }, []);\n  console.log(tasks.themes);\n  console.log(tasks.tasks); // const addType = () => {\n  //     createCompilation({name: value}).then(data => {\n  //         setValue('')\n  //         onHide()\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0438\\u043F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: value,\n          onChange: e => setValue(e.target.value),\n          placeholder: \"Введите название типа\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onHide,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: addType,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateComp, \"VzbmNxr32sul+6eR5ORrjxvX5SE=\");\n\n_c = CreateComp;\nexport default CreateComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComp\");","map":{"version":3,"sources":["C:/Users/Denislove/Desktop/project-x/client/src/components/modals/CreateCompilation.js"],"names":["React","useState","Modal","Form","Button","createCompilation","Context","fetchDevices","fetchOneDevice","CreateComp","show","onHide","value","setValue","tasks","useContext","useEffect","then","data","console","log","rows","setThemes","id","SetTasks","map","themes","e","target","addType"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAoB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACa,IAAAA;AAAD,MAAUC,UAAU,CAACT,OAAD,CAA1B;AAEAU,EAAAA,SAAS,CAAC,MAAM;AACZT,IAAAA,YAAY,GAAGU,IAAf,CAAoBC,IAAI,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACAP,MAAAA,KAAK,CAACQ,SAAN,CAAgBJ,IAAI,CAACG,IAArB;AAEH,KAJD;AAKAb,IAAAA,cAAc,CAACe,EAAD,CAAd,CAAmBN,IAAnB,CAAwBC,IAAI,IAAI;AAC5BJ,MAAAA,KAAK,CAACU,QAAN,CAAeN,IAAf,EAD4B,CAE5B;;AACAJ,MAAAA,KAAK,CAACA,KAAN,CAAYW,GAAZ,CAAgBP,IAAI,IAChBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACK,EAAjB,CADJ;AAGH,KAND;AAOH,GAbQ,EAaN,EAbM,CAAT;AAcAJ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACY,MAAlB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACA,KAAlB,EAnBmC,CAoBnC;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACI,QAAC,KAAD;AACI,IAAA,IAAI,EAAEJ,IADV;AAEI,IAAA,MAAM,EAAEC,MAFZ;AAGI,IAAA,QAAQ,MAHZ;AAAA,4BAKI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAUI,QAAC,KAAD,CAAO,IAAP;AAAA,6BACI,QAAC,IAAD;AAAA,+BACI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,KAAK,EAAEC,KADX;AAEI,UAAA,QAAQ,EAAEe,CAAC,IAAId,QAAQ,CAACc,CAAC,CAACC,MAAF,CAAShB,KAAV,CAF3B;AAGI,UAAA,WAAW,EAAE;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eAmBI,QAAC,KAAD,CAAO,MAAP;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,gBAAhB;AAAiC,QAAA,OAAO,EAAED,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,iBAAhB;AAAkC,QAAA,OAAO,EAAEkB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAtDD;;GAAMpB,U;;KAAAA,U;AAwDN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {createCompilation} from \"../../http/CatalogApi\";\nimport {Context} from \"../../index\";\nimport { fetchDevices } from \"../../http/CatalogApi\";\nimport { fetchOneDevice } from \"../../http/CatalogApi\";\n\nconst CreateComp = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n    const {tasks} = useContext(Context)\n\n    useEffect(() => {\n        fetchDevices().then(data => {\n            console.log(data.rows)\n            tasks.setThemes(data.rows)\n            \n        })\n        fetchOneDevice(id).then(data => {\n            tasks.SetTasks(data)\n            // console.log(tasks.tasks[1].TaskId)\n            tasks.tasks.map(data =>\n                console.log(data.id)\n            )\n        })\n    }, [])\n    console.log(tasks.themes)\n    console.log(tasks.tasks)\n    // const addType = () => {\n    //     createCompilation({name: value}).then(data => {\n    //         setValue('')\n    //         onHide()\n    //     })\n    // }\n\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addType}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateComp;\n"]},"metadata":{},"sourceType":"module"}