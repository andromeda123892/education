{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Denislove\\\\Desktop\\\\project-x\\\\client\\\\src\\\\components\\\\modals\\\\CreateCompilation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\nimport { createCompilation } from \"../../http/CatalogApi\";\nimport { Context } from \"../../index\";\nimport { fetchThemes } from \"../../http/CatalogApi\";\nimport { fetchTasks } from \"../../http/CatalogApi\";\n\nconst CreateComp = ({\n  show,\n  onHide\n}) => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const [currentTheme, setCurrentTheme] = useState(0);\n  const {\n    tasks\n  } = useContext(Context);\n  useEffect(() => {\n    fetchThemes().then(data => {\n      tasks.setThemes(data.rows);\n    });\n    fetchTasks().then(data => {\n      tasks.SetTasks(data.rows); // console.log(tasks.tasks[1].TaskId)\n    });\n  }, []);\n  console.log(tasks.Themes);\n  tasks.tasks.map(data => console.log(data.info));\n\n  const addType = () => {\n    createCompilation({\n      name: value\n    }).then(data => {\n      setValue('');\n      onHide();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0438\\u043F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"mt-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          children: currentTheme || 'Выберите тему'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: tasks.Themes.map(data => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setCurrentTheme(data.id),\n            children: data.id\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: value,\n          onChange: e => setValue(e.target.value),\n          placeholder: \"Введите название типа\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onHide,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: addType,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateComp, \"fgA9dlozc1/saPm4HxNsGM/q+c4=\");\n\n_c = CreateComp;\nexport default CreateComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComp\");","map":{"version":3,"sources":["C:/Users/Denislove/Desktop/project-x/client/src/components/modals/CreateCompilation.js"],"names":["React","useContext","useEffect","useState","Modal","Button","Dropdown","Form","Row","Col","createCompilation","Context","fetchThemes","fetchTasks","CreateComp","show","onHide","value","setValue","currentTheme","setCurrentTheme","tasks","then","data","setThemes","rows","SetTasks","console","log","Themes","map","info","addType","name","id","e","target"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {createCompilation} from \"../../http/CatalogApi\";\nimport {Context} from \"../../index\";\nimport { fetchThemes } from \"../../http/CatalogApi\";\nimport { fetchTasks } from \"../../http/CatalogApi\";\n\nconst CreateComp = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n    const [currentTheme, setCurrentTheme] = useState(0)\n    const {tasks} = useContext(Context)\n\n    useEffect(() => {\n        fetchThemes().then(data => {\n            tasks.setThemes(data.rows)\n            \n        })\n        fetchTasks().then(data => {\n            tasks.SetTasks(data.rows)\n            // console.log(tasks.tasks[1].TaskId)\n        })\n    }, [])\n    console.log(tasks.Themes)\n    tasks.tasks.map(data =>\n        console.log(data.info)\n    )\n    const addType = () => {\n        createCompilation({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{currentTheme || 'Выберите тему'}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {tasks.Themes.map(data =>\n                                <Dropdown.Item\n                                    onClick={() => setCurrentTheme(data.id)}\n                                    key={data.id}\n                                >\n                                    {data.id}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>    \n            </Dropdown>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addType}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateComp;\n"]},"metadata":{},"sourceType":"module"}